// DUYỆT ĐỒ THỊ THEO CHIỀU S U (NGĂN XẾP)
List depth_first_search(Graph* G, int x) {
	Stack S;
	make_null_stack(&S);
	push(&S, x);
	List list_dfs;
	make_null(&list_dfs);
	int mark[MAX_Vertices];
	int i;
	for (i = 1; i <= G->n; i++)
		mark[i] = 0;	
	while (!empty(&S)) {
		int u = top(&S);
		pop(&S);
		if (mark[u] == 1)
			continue;
	//	printf("Duyet %d\n", u);
		push_back(&list_dfs,u);
		mark[u] = 1; 
		List list = neighbors(G, u); 
		for (i = 1; i <= list.size; i++) { 
			int v = list.data[i-1];
			if(mark[v] == 0){
				push(&S, v);	
			}
		}
	}
	return list_dfs;
}
int main(){
//	freopen("dt.txt","r",stdin);
	Graph G;
	int n, m, u, v, e,i,j;
	scanf("%d%d", &n, &m);
	init_Graph(&G, n);
	
	for (e = 0; e < m; e++) {
		scanf("%d%d", &u, &v);
		add_edge(&G, u, v);
	}
	int mark_dfs[MAX_Vertices];
	for(i = 1; i <= G.n ; i++){
	    mark_dfs[i] = 0;
	}
	for(i = 1; i <= G.n ; i++){
	    if(mark_dfs[i] == 0){
	        List dfs = depth_first_search(&G,i);
    	    for(j = 1; j <= dfs.size ; j++){
    	        int k = element_at(&dfs,j);
	            printf("%d\n", k);
	            mark_dfs[k] = 1;
	        }
	    }
	}
	return 0;
}
