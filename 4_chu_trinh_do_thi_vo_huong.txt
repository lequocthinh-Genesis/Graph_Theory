// CHU TRÌNH ĐỒ THỊ VÔ HƯỚNG (KO CÓ KHUYÊN KO CÓ ĐA CUNG)
// khai báo ma trận đỉnh đỉnh
#define white 0
#define black 1
#define gray 2
#define MAX_VERTICES 1000

int color[MAX_VERTICES];
int cycle;

void dfs(Graph *G, int x, int parent){
	color[x] = gray;
	int j;
	List list = neighbors(G, x);
	for( j = 1 ; j <= list.size ; j++ ){
		int y = element_at(&list,j);
		if( y == parent) continue;
		if( color[y] == gray){
			cycle = 1;
			return;
		}
		if( color[y] == white){
			dfs(G,y,x);
		}
	}
	color[x] = black;
}


int contains_cycle(Graph *G){
	int j;
	for(j = 1; j <= G->n ; j++){
		color[j] = white;
	}
	cycle = 0;
	for(j = 1; j <= G->n ; j++){
		if(color[j] == white){
			dfs(G,j,0);
		}
	}
	return cycle;
}
int main(){
	freopen("dt.txt","r",stdin);
	Graph G;
	int n,m,u,v,i;
	scanf("%d%d",&n,&m);
	init_Graph(&G,n);
	for(i = 1; i <= m ; i++){
		scanf("%d%d",&u,&v);
		add_edge(&G,u,v);
	}
	if (contains_cycle(&G))
		printf("YES");
	else
		printf("NO");
	return 0;
}
